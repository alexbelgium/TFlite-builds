name: Build TFLite Runtime Wheels

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        python_version: ["3.9", "3.10", "3.11"]
        arch: ["amd64", "aarch64"]

    steps:
    - name: Checkout TensorFlow
      uses: actions/checkout@v4
      with:
        repository: tensorflow/tensorflow
        submodules: true
        fetch-depth: 0
        ref: v2.18.0

    - name: Setup Docker
      run: |
        sudo apt update
        sudo apt install -y docker.io

    - name: Adjust Dockerfile for Python 3.11
      if: matrix.python_version == '3.11'
      run: |
        sed -i '/get-pip.py/a RUN rm /usr/lib/python${PYTHON_VERSION}/EXTERNALLY-MANAGED' tensorflow/lite/tools/pip_package/Dockerfile.py3

    - name: Configure Makefile
      run: |
        sed -i 's/^BASE_IMAGE.*/BASE_IMAGE ?= ubuntu:22.04/' tensorflow/lite/tools/pip_package/Makefile
        sed -i 's/^PYTHON_VERSION.*/PYTHON_VERSION ?= ${{ matrix.python_version }}/' tensorflow/lite/tools/pip_package/Makefile
        sed -i 's/^NUMPY_VERSION.*/NUMPY_VERSION ?= 1.24.4/' tensorflow/lite/tools/pip_package/Makefile

    - name: Build TFLite Runtime Wheel using Docker
      run: |
        BUILD_NUM_JOBS=$(nproc) make -C tensorflow/lite/tools/pip_package docker-build TENSORFLOW_TARGET=${{ matrix.arch }} PYTHON_VERSION=${{ matrix.python_version }}

    - name: Upload TFLite Wheel
      uses: actions/upload-artifact@v4
      with:
        name: tflite_runtime-${{ matrix.arch }}-py${{ matrix.python_version }}
        path: tensorflow/lite/tools/pip_package/gen/tflite_pip/python/dist/*.whl
