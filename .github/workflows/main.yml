name: Build TFLite Runtime Wheels

on:
  push:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        python_version: ["3.9", "3.10", "3.11", "3.12"]
        arch: ["amd64", "aarch64"]

    steps:
    - name: Checkout TensorFlow
      uses: actions/checkout@v4
      with:
        repository: tensorflow/tensorflow
        submodules: true
        fetch-depth: 0
        ref: v2.18.0

    - name: Setup Docker and Dependencies
      run: |
        sudo apt update
        sudo apt remove -y docker.io containerd runc || true
        sudo apt install -y build-essential lld git zip unzip pkg-config curl gcc-12 clang-17
        curl -fsSL https://get.docker.com | sudo sh

    - name: Adjust Dockerfile
      run: |
        sed -i 's/3.16.8/3.29.6/g' tensorflow/lite/tools/pip_package/Dockerfile.py3
        if [[ "${{ matrix.python_version }}" == "3.11" || "${{ matrix.python_version }}" == "3.12" ]]; then
          sed -i '/RUN curl -OL https:\/\/bootstrap.pypa.io\/get-pip.py/a\    RUN rm /usr/lib/python$PYTHON_VERSION/EXTERNALLY-MANAGED' tensorflow/lite/tools/pip_package/Dockerfile.py3
        fi

    - name: Configure Makefile
      run: |
        sed -i 's/ubuntu:20.04/ubuntu:22.04/g' tensorflow/lite/tools/pip_package/Makefile
        if [[ "${{ matrix.python_version }}" == "3.12" ]]; then
          sed -i 's/^NUMPY_VERSION.*/NUMPY_VERSION ?= 1.26.4/' tensorflow/lite/tools/pip_package/Makefile
        else
          sed -i 's/^NUMPY_VERSION.*/NUMPY_VERSION ?= 1.24.4/' tensorflow/lite/tools/pip_package/Makefile
        fi

    - name: Build TFLite Runtime Wheel using Docker
      run: |
        export BASE_IMAGE="ubuntu:22.04"
        export PYTHON_VERSION="${{ matrix.python_version }}"
        if [[ "${{ matrix.python_version }}" == "3.12" ]]; then
          export NUMPY_VERSION="1.26.4"
        else
          export NUMPY_VERSION="1.24.4"
        fi
        export TENSORFLOW_TARGET="${{ matrix.arch }}"

        BUILD_NUM_JOBS=$(nproc) make -C tensorflow/lite/tools/pip_package docker-build \
          TENSORFLOW_TARGET=$TENSORFLOW_TARGET PYTHON_VERSION=$PYTHON_VERSION

    - name: Upload TFLite Wheel
      uses: actions/upload-artifact@v4
      with:
        name: tflite_runtime-${{ matrix.arch }}-py${{ matrix.python_version }}
        path: tensorflow/lite/tools/pip_package/gen/tflite_pip/python/dist/*.whl
